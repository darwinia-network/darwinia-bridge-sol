const { ethers } = require("ethers");
const { toHexString } = require('@chainsafe/ssz')
const rlp = require("rlp")
const InboundLane = require("../../artifacts/src/message/InboundLane.sol/InboundLane.json");

(async () => {
  const iface = new ethers.utils.Interface(InboundLane.abi)
  const outboundLaneData = {
    latest_received_nonce: 0,
    messages: [
      {
        encoded_key: '0x0000000000000000000000010000000000000000000000010000000000000003',
        payload: {
          source: '0x7181932da75bee6d3604f4ae56077b52fb0c5a3b',
          target: '0x0000000000000000000000000000000000000000',
          encoded: '0x'
        }
      }
    ]
  }
  const accountProof = [
      "0xf90211a0d9404eacdf89c176c38a2f4641cc93677c36be6ab43094662537dc2436c12c76a0cddbe921a87604ea888cbdf348aca43e2d01a90794ea7fc46f0890cfb2e9d811a04bd8b365bf6ca1c7f54cbf1f3bd2271ca76e444e3269fdc3e87e952fd203da3da065f3241f7bb772ce81118582a8c79713523d704e627c2fd85f298b0ae06486c5a0c8346d2c10d1dddc49fa84eb74140a4862dad1501062c29fecb7257444037e0ea04b55974f3827f0a267b6f0d63f040be4cced13b842206d986352556a096b18b1a02524c14ddbfc29b5d320819dd9aa780413ff0435b5b1e8b8234940fa7b78bdb0a070e9baf676bec841348aa1fe8cf66065ac33f9859961e0cd5b0b2f1e139df380a0b61a52f918ab987e63be807bced8aac4a9c2d1880a65291f3676290dfc786ac5a0611cf7d3f43315c5b0bcdb6f1b04110d61c72eeebd28cff426fa2ef831bc7eeaa069ef98be37faf5fc332fd80229cf0fff839c6085a54edab9fdb91820f55fe921a07edc918d73a82db4d74b75c5fddd9eafeb999b2764321bf8be825a2488150140a0d8e723f1fcccda1202db22d26edb4be784b583d4d6403a3142f8d80ff96e700da03064870d6940db732eca3abaf9e9f04b46a957a9157868bea025da09ed55e8eca0c6571e611bd5ae8423fb6e28add9ac819ec97fdd26ebe4cef45067fbea84fa60a011ff3ead16fdb904d0815788bdb8dbb2a50ab118f37aaf6f61294ff8527d9d7b80",
      "0xf90211a07110c4739bcf32d9d807e66bd78db5172971f79f15a0d1ade384c93263b60f37a094ba6f454287aa3a604929a53387d635a0552b10823870cf446cfd0bf95feb66a0eb2acfe3b07d884c4ed2e4c4db5ec02405050f96b8d3aaa5f4c26a516eca3315a0a1ff76112aa189e6c0ed8404ebdfb4bc4651f2b4f3e53f4505bb97c055e305f7a0e767ad76c2c4397282682a76d35d3440679f5ed9d92f91aa3f659a4175c8044da0b2f7c2f7b4c4c8d4ffafc7340d6326a8cfd5427e7f194008ad1c454183cf8f7ca0216474602f7958e4ebb03759c6a889243aed94389f0f2bdb2c1ae5d2883bda46a0f7c33595dff75dc6bb81136e2150686ffefb1f6dc4c75d687c77295b3fe2c6fda007b3c0e58f422638fe3ed60f91774102682217363635e865c573d50c7ba7941fa088f3f1c738af0473493448b9915659676f4979f24e77a64d5cc7588ca32c74b9a0d06d26bd0f9342729df0e31ab435f254103c12b97a87447cb95d46062ca92919a0ef64555b7528ba2daeefff0eba64a172d9ea45e036a82d7aabb388e32677758ca0f2845b34d78b0ef98b245435a2f96ea37e932429d16831277d6e421cf66d2f84a03065ee96bb5c53341c72c29407f09896f4c573c2b4885c3cb155485044aab915a0f47852bc1f89d11622c08a7a2d620ee0609d211275b7bd8194a3c4976c807b98a066e8e62cea0cb70eff1b86d21d747db4190e3b4a9aa6217cc578606868c84ad180",
      "0xf90211a079a4936387a0a28eb21e64af7d7778f0d3dcdae6ddd885d189ec4b0264a72871a059ca31a810525ad3244c17dfcddc6411957128fcbcb48efb59764eab7bfbc815a010c6c3f009765d3b2d0794161c354cb625f66d50aa9abe4af1e3f4fa315eb44ea09dbc33e874e37f253c1afb9c7daa08ee18368cad2b9397957252f650bd11953ca0f5682132eacaa2a330ac0afee91e334744c744d3b5b41292bb647393fb699f4da02ef9bb21a719985b9240001ed00d877370768839099ef1a3972319e95b0e2cc9a0b992557581ef6a6dacc72b91cd953879478c9a11a46cd58d54275a1fa01b9ce6a0982388a18d96c48287d99062a164dd03f9de980add762206f28f6dda4dab05d2a0f44896edd7468232f87a2a2397d6ff00a8badd0b176d115492975b774bcb299da0f92c3ded13b6a5f7c0310d51c2d37007bc0034a065384cfa007157d70572ea4ea0d2be98bb0ffbfdee92f300f56bc50b8a10de3e32883349362c5699ed231455a5a0103ca7c602d28931280f241f360d669dc655d67744f96ffdbfc33b1eaa5dfc75a0d6fab54fa806d0c1bd0ea19fef5fa110a162e6410ba17e05242e859007c4a380a0e6a4f6b6e9ef4d03c04229f7fb2f1cc49b923e4584562eda663614ba6fbf12a0a0a73051deb0a4d16c5ed013ff5d7c683dc4220a40cfded2754937e0633c44a8bca0edac20af813efe09d03509409c83b82d1938dc1c4a36d683d9352d24efe23a0580",
      "0xf901518080a09ec353b72939c77c48a9571270059259ab02d054383f36e5779ff4b701191ecba0c62d47815ed0f4dbb43037693f3742700709e18252e31a3b4e8e8f07bc21057ba0f5aa0360acaf60141eef2a911f39efc3da191de9c6cb209b321e48d8944e5f67a08a6a078d1287a12cc5bcee9b88a419e1076957f15c39a6e4e2da9b7d4be7bc94a004eea7ca6c54e777243b1c64f6a0db1b52eb17e3290e9eec7dde9bce63f811d6a011e955d8f000f2987a5ffed3b91fde738803ffff68c5b48a643c8cad60a6e47ea057caaac94716c3d72363e1e6a2dd647fb3cfbec34b2d83037224fcf2a2a6cdb0a027019ab20e4ae26e335069f95d785bce74cb51830cd5d0ef42f3aba91a27202ba07b8faf780867b400884a124643c9473c6ca41dfd71438088aefaf8471ef8168380a09d1b48b1242b906ba87777ab9d318a84e4efec5a05911c1d80f83c41fd34255d80808080",
      "0xf851a08bdc5cf93b56d60255351573ed70a2d156d17a9c169d19f00eba3e8b8868dbf680808080a0eb8b3c7945bcaa3fe98aadaeaad706c1306fe00ab97a957c9c139e90e77a45ee8080808080808080808080",
      "0xf8679e3c8bae029246807b96080f85ec1e03c30e7a8ff5cd6af629098289a3ceadb846f8440180a06a89404c7c797e9cf0337724cbf53295750430daf6fba330134fc3c74c87d5f9a07f309f3ad4de01ee0c5dfb6e3930055abecb9727698fbbcf6611197b0552a4a6"
    ]


  const laneIdStorageProof = [
          "0xf8918080a0d07f2631053c21e498a505dd337130f9d66bd6d8e608c3190abaea3c3712fe3880808080a06805ef3e1126ba2f15343f306d0709484910f90991252cfa7b2bff54aaf91030808080a07660f66f9fb714ef3e2d28d63c313d9f9b36dc49472bad913807d6a6e1d1fb5880a02d31cab1eaeecada83e924bd6f0b23140605b1597378599a79210b5596f2a5b2808080",
          "0xf851808080808080808080a0e9009984a8f5f212cedbe84169dd8fbb58ee7a59a1a2f5197d4da9ccceee81738080808080a00d24136860d6de2b8eb0262d72303a2f9fb745f3179e4e0cdef2b749f369a26380",
          "0xf0a0200decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638e8d01000000000000000000000001"
        ]
  const landNonceStorageProof = [
          "0xf8918080a0d07f2631053c21e498a505dd337130f9d66bd6d8e608c3190abaea3c3712fe3880808080a06805ef3e1126ba2f15343f306d0709484910f90991252cfa7b2bff54aaf91030808080a07660f66f9fb714ef3e2d28d63c313d9f9b36dc49472bad913807d6a6e1d1fb5880a02d31cab1eaeecada83e924bd6f0b23140605b1597378599a79210b5596f2a5b2808080",
          "0xf4a0310e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf692910100000000000000030000000000000000"
        ]
  const laneMessagesStorageProof = [
          "0xf8918080a0d07f2631053c21e498a505dd337130f9d66bd6d8e608c3190abaea3c3712fe3880808080a06805ef3e1126ba2f15343f306d0709484910f90991252cfa7b2bff54aaf91030808080a07660f66f9fb714ef3e2d28d63c313d9f9b36dc49472bad913807d6a6e1d1fb5880a02d31cab1eaeecada83e924bd6f0b23140605b1597378599a79210b5596f2a5b2808080",
          "0xf851808080808080808080a0e9009984a8f5f212cedbe84169dd8fbb58ee7a59a1a2f5197d4da9ccceee81738080808080a00d24136860d6de2b8eb0262d72303a2f9fb745f3179e4e0cdef2b749f369a26380",
          "0xf843a020c7941cecc943bf2000c5d7068f2b8c8e9a29be62acd583fe9e6e90489a8c82a1a0f68a7103167104b132a65ee29f46cb238d61f3ca1813cc87155928bab0af5ac1"
        ]
  const proof = {
    "accountProof": toHexString(rlp.encode(accountProof)),
    "laneIDProof": toHexString(rlp.encode(laneIdStorageProof)),
    "laneNonceProof": toHexString(rlp.encode(landNonceStorageProof)),
    "laneMessagesProof": [toHexString(rlp.encode(laneMessagesStorageProof))],
  }
  const messagesProof = ethers.utils.defaultAbiCoder.encode([
    "tuple(bytes accountProof, bytes laneIDProof, bytes laneNonceProof, bytes[] laneMessagesProof)"
    ], [ proof ])
  console.log(await iface.encodeFunctionData("receive_messages_proof", [ outboundLaneData, messagesProof ]))
})();
