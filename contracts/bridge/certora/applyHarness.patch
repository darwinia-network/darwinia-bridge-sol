diff -ruN .gitignore .gitignore
--- .gitignore	1970-01-01 08:00:00
+++ .gitignore	2022-11-14 19:45:11
@@ -0,0 +1,2 @@
+*
+!.gitignore
diff -ruN BeaconLightClient.f.sol BeaconLightClient.f.sol
--- BeaconLightClient.f.sol	2022-10-31 15:23:14
+++ BeaconLightClient.f.sol	2022-11-14 19:48:28
@@ -955,9 +955,9 @@
 
     // follow beacon api: /beacon/light_client/updates/?start_period={period}&count={count}
     function import_next_sync_committee(
-        FinalizedHeaderUpdate calldata header_update,
-        SyncCommitteePeriodUpdate calldata sc_update
-    ) external {
+        FinalizedHeaderUpdate memory header_update,
+        SyncCommitteePeriodUpdate memory sc_update
+    ) internal {
         require(is_supermajority(header_update.sync_aggregate.sync_committee_bits), "!supermajor");
         require(header_update.signature_slot > header_update.attested_header.slot &&
                 header_update.attested_header.slot >= header_update.finalized_header.slot,
@@ -1004,7 +1004,7 @@
     }
 
     // follow beacon api: /eth/v1/beacon/light_client/finality_update/
-    function import_finalized_header(FinalizedHeaderUpdate calldata update) external {
+    function import_finalized_header(FinalizedHeaderUpdate memory update) internal {
         require(is_supermajority(update.sync_aggregate.sync_committee_bits), "!supermajor");
         require(update.signature_slot > update.attested_header.slot &&
                 update.attested_header.slot >= update.finalized_header.slot,
@@ -1097,7 +1097,7 @@
         );
     }
 
-    function is_supermajority(bytes32[2] calldata sync_committee_bits) internal pure returns (bool) {
+    function is_supermajority(bytes32[2] memory sync_committee_bits) internal pure returns (bool) {
         return sum(sync_committee_bits) * 3 >= SYNC_COMMITTEE_SIZE * 2;
     }
 
